name: Python CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: arc-runner-set
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install uv
      run: pip install uv
    
    - name: Create virtual environment and install dependencies
      run: |
        uv venv --python ${{ matrix.python-version }}
        uv pip install -e ".[dev]"
    
    - name: Lint with black and isort
      run: |
        uv run black --check .
        uv run isort --check .
    
    - name: Type check with mypy
      run: |
        uv run mypy src
    
    - name: Test with pytest
      run: |
        uv run pytest --cov=src

  # publish:
  #   needs: test
  #   if: startsWith(github.ref, 'refs/tags/v')
  #   runs-on: arc-runner-set
  #   environment: pypi
  #   permissions:
  #     id-token: write
  #   steps:
  #   - uses: actions/checkout@v4
    
  #   - name: Set up Python
  #     uses: actions/setup-python@v5
  #     with:
  #       python-version: "3.12"
    
  #   - name: Install build dependencies
  #     run: pip install build twine
    
  #   - name: Build package
  #     run: python -m build
    
  #   - name: Check package
  #     run: twine check dist/*
    
  #   - name: Publish to PyPI
  #     run: |
  #       python -m twine upload dist/* --username __token__ --password ${{ secrets.PYPI_TOKEN }}
